using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;

namespace Projeto
{
    public partial class AtribuirDocs : Form
    {

        private Model1Container camera;
        public AtribuirDocs()
        {
            InitializeComponent();
        }

        public int numeroparcer;
        public int idprojeto;

        public AtribuirDocs(int parecernumero, int projetoid)
        {
            InitializeComponent();
            camera = new Model1Container();
            numeroparcer = parecernumero;
            idprojeto = projetoid;
        }

        private void AtribuirDocs_Load(object sender, EventArgs e)
        {
            try
            {
                camera.Dispose();
                camera = new Model1Container();
                (from Documento in camera.DocumentoSet where Documento.ParecerNumero == numeroparcer select Documento).ToList();

                dataGridViewDocumentosAtribuidos.DataSource = camera.DocumentoSet.Local.ToList<Documento>();

                camera.Dispose();
                camera = new Model1Container();
                (from Documento in camera.DocumentoSet where Documento.ProjetoId == idprojeto select Documento).ToList();
            }
            catch (ArgumentNullException anex)
            {
                MessageBox.Show("Erro ao tentar aceder a tabela Documento 1\n\r" + anex.Message, "ERRO", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }

            try
            {
                cbDocumento.DataSource = null;
                cbDocumento.DataSource = camera.DocumentoSet.ToList<Documento>();
                cbDocumento.SelectedIndex = -1;
            }
            catch (ArgumentNullException anex)
            {
                MessageBox.Show("Erro ao tentar aceder a tabela Documento 2\n\r" + anex.Message, "ERRO", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }

            tbNumeroParcer.Text = numeroparcer.ToString();
        }

        private void btRegistar_Click(object sender, EventArgs e)
        {
            try
            {
                Documento d = (Documento)cbDocumento.SelectedItem;

                d.ParecerNumero = numeroparcer;

                camera.SaveChanges();

                camera.Dispose();
                camera = new Model1Container();
                (from Documento in camera.DocumentoSet where Documento.ParecerNumero == numeroparcer select Documento).ToList();

                dataGridViewDocumentosAtribuidos.DataSource = camera.DocumentoSet.Local.ToList<Documento>();

                cbDocumento.SelectedIndex = -1;
            }
            catch (NotSupportedException nsex)
            {
                MessageBox.Show("Erro ao tentar guardar o documento\n\r" + nsex.Message, "ERRO", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            catch (InvalidOperationException ioex)
            {
                MessageBox.Show("Erro ao tentar guardar o documento\n\r" + ioex.Message, "ERRO", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            catch (ArgumentNullException anex)
            {
                MessageBox.Show("Erro ao tentar aceder à tabela Documento\n\r" + anex.Message, "ERRO", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
        }

        private void btEliminar_Click(object sender, EventArgs e)
        {
            try
            {
                Documento d = (Documento)dataGridViewDocumentosAtribuidos.SelectedRows[0].DataBoundItem;

                d.ParecerNumero = null;

                camera.SaveChanges();

                camera.Dispose();
                camera = new Model1Container();
                (from Documento in camera.DocumentoSet where Documento.ParecerNumero == numeroparcer select Documento).ToList();

                dataGridViewDocumentosAtribuidos.DataSource = camera.DocumentoSet.Local.ToList<Documento>();
            }
            catch (NotSupportedException nsex)
            {
                MessageBox.Show("Erro ao tentar apagar o documento\n\r" + nsex.Message, "ERRO", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            catch (InvalidOperationException ioex)
            {
                MessageBox.Show("Erro ao tentar apagar o documento\n\r" + ioex.Message, "ERRO", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
            catch (ArgumentNullException anex)
            {
                MessageBox.Show("Erro ao tentar aceder à tabela Documento\n\r" + anex.Message, "ERRO", MessageBoxButtons.OK, MessageBoxIcon.Error);
            }
        }
    }
}
